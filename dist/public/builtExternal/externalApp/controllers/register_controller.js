define(['externalApp/base', 'angularjs', 'fbase'], function(TimeSheetApp) {
  var RegisterController;
  RegisterController = (function() {
    function RegisterController($scope, FirebaseService, $firebaseObject, $firebaseArray) {
      $scope.users = $firebaseObject(FirebaseService.rootRef.child('registrations'));
      $scope.parents = $firebaseObject(FirebaseService.rootRef.child('parents'));
      $scope.assignManager = function(user, id) {
        FirebaseService.rootRef.child("users/" + id + "/basic/manager").set(true);
        FirebaseService.rootRef.child("users/" + id + "/basic/mentor").set(false);
        FirebaseService.rootRef.child("users/" + id).setPriority('manager');
        FirebaseService.rootRef.child("registrations/" + id + "/manager").set(true);
        FirebaseService.rootRef.child("registrations/" + id + "/mentor").set(false);
        return FirebaseService.rootRef.child("registrations/" + id).setPriority('manager');
      };
      $scope.assignMentor = function(user, id) {
        FirebaseService.rootRef.child("users/" + id + "/basic/manager").set(false);
        FirebaseService.rootRef.child("users/" + id + "/basic/mentor").set(true);
        FirebaseService.rootRef.child("users/" + id).setPriority('mentor');
        FirebaseService.rootRef.child("registrations/" + id + "/manager").set(false);
        FirebaseService.rootRef.child("registrations/" + id + "/mentor").set(true);
        return FirebaseService.rootRef.child("registrations/" + id).setPriority('mentor');
      };
      $scope.sendEmail = function(user, id) {
        FirebaseService.rootRef.child("queues/sendCredentialsEmail").push().set({
          userId: id
        });
        return alert('All Set!');
      };
      $scope.createNewChild = function(newChildForm, parentId, theChild, parent) {
        var studentRef;
        if (newChildForm.$valid) {
          studentRef = FirebaseService.rootRef.child('students').push();
          studentRef.set({
            firstName: theChild.firstName,
            lastName: theChild.lastName
          });
          FirebaseService.rootRef.child("parents/" + parentId).child('children').push().set({
            firstName: theChild.firstName,
            lastName: theChild.lastName,
            studentId: studentRef.key()
          });
          return studentRef.child('parent').set({
            firstName: parent.firstName,
            lastName: parent.lastName,
            parentId: parentId
          });
        }
      };
    }

    return RegisterController;

  })();
  RegisterController.$inject = ["$scope", "FirebaseService", "$firebaseObject", "$firebaseArray"];
  TimeSheetApp.controller('RegisterController', RegisterController);
  return RegisterController;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2tyaXNobmFyb2toYWxlL2NvZGUvbGV2ZWwvbGV2ZWwvdGltZXNoZWV0YXBwL3B1YmxpYy9qYXZhc2NyaXB0cy9leHRlcm5hbEFwcC9jb250cm9sbGVycy9yZWdpc3Rlcl9jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL1VzZXJzL2tyaXNobmFyb2toYWxlL2NvZGUvbGV2ZWwvbGV2ZWwvdGltZXNoZWV0YXBwL2Fzc2V0cy9qYXZhc2NyaXB0cy9leHRlcm5hbEFwcC9jb250cm9sbGVycy9yZWdpc3Rlcl9jb250cm9sbGVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFBLENBQU8sQ0FBRSxrQkFBRixFQUFxQixXQUFyQixFQUFrQyxPQUFsQyxDQUFQLEVBQWtELFNBQUMsWUFBRCxHQUFBO0FBRWhELE1BQUEsa0JBQUE7QUFBQSxFQUFNO0FBRVMsSUFBQSw0QkFBQyxNQUFELEVBQVMsZUFBVCxFQUEwQixlQUExQixFQUEyQyxjQUEzQyxHQUFBO0FBRVgsTUFBQSxNQUFNLENBQUMsS0FBUCxHQUFlLGVBQUEsQ0FBZ0IsZUFBZSxDQUFDLE9BQU8sQ0FBQyxLQUF4QixDQUErQixlQUEvQixDQUFoQixDQUFmLENBQUE7QUFBQSxNQUNBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLGVBQUEsQ0FBZ0IsZUFBZSxDQUFDLE9BQU8sQ0FBQyxLQUF4QixDQUErQixTQUEvQixDQUFoQixDQURqQixDQUFBO0FBQUEsTUFHQSxNQUFNLENBQUMsYUFBUCxHQUF1QixTQUFDLElBQUQsRUFBTyxFQUFQLEdBQUE7QUFDckIsUUFBQSxlQUFlLENBQUMsT0FBTyxDQUFDLEtBQXhCLENBQStCLFFBQUEsR0FBUSxFQUFSLEdBQVcsZ0JBQTFDLENBQTBELENBQUMsR0FBM0QsQ0FBK0QsSUFBL0QsQ0FBQSxDQUFBO0FBQUEsUUFDQSxlQUFlLENBQUMsT0FBTyxDQUFDLEtBQXhCLENBQStCLFFBQUEsR0FBUSxFQUFSLEdBQVcsZUFB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Q0FBQyxLQUFyRCxDQUE0RCxVQUE1RCxDQUFzRSxDQUFDLElBQXZFLENBQUEsQ0FBNkUsQ0FBQyxHQUE5RSxDQUFrRjtBQUFBLFlBQUMsU0FBQSxFQUFXLFFBQVEsQ0FBQyxTQUFyQjtBQUFBLFlBQWdDLFFBQUEsRUFBVSxRQUFRLENBQUMsUUFBbkQ7QUFBQSxZQUE2RCxTQUFBLEVBQVcsVUFBVSxDQUFDLEdBQVgsQ0FBQSxDQUF4RTtXQUFsRixDQUhBLENBQUE7aUJBSUEsVUFBVSxDQUFDLEtBQVgsQ0FBa0IsUUFBbEIsQ0FBMEIsQ0FBQyxHQUEzQixDQUErQjtBQUFBLFlBQUMsU0FBQSxFQUFXLE1BQU0sQ0FBQyxTQUFuQjtBQUFBLFlBQThCLFFBQUEsRUFBVSxNQUFNLENBQUMsUUFBL0M7QUFBQSxZQUF5RCxRQUFBLEVBQVUsUUFBbkU7V0FBL0IsRUFMRjtTQURzQjtNQUFBLENBMUJ4QixDQUZXO0lBQUEsQ0FBYjs7OEJBQUE7O01BRkYsQ0FBQTtBQUFBLEVBdUNBLGtCQUFrQixDQUFDLE9BQW5CLEdBQTZCLENBQUUsUUFBRixFQUFZLGlCQUFaLEVBQStCLGlCQUEvQixFQUFrRCxnQkFBbEQsQ0F2QzdCLENBQUE7QUFBQSxFQXlDQSxZQUFZLENBQUMsVUFBYixDQUF5QixvQkFBekIsRUFBOEMsa0JBQTlDLENBekNBLENBQUE7U0EyQ0EsbUJBN0NnRDtBQUFBLENBQWxELENBQUEsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImRlZmluZSBbJ2V4dGVybmFsQXBwL2Jhc2UnLCdhbmd1bGFyanMnLCAnZmJhc2UnXSwgKFRpbWVTaGVldEFwcCkgLT5cblxuICBjbGFzcyBSZWdpc3RlckNvbnRyb2xsZXJcblxuICAgIGNvbnN0cnVjdG9yOiAoJHNjb3BlLCBGaXJlYmFzZVNlcnZpY2UsICRmaXJlYmFzZU9iamVjdCwgJGZpcmViYXNlQXJyYXkpIC0+XG5cbiAgICAgICRzY29wZS51c2VycyA9ICRmaXJlYmFzZU9iamVjdChGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZCgncmVnaXN0cmF0aW9ucycpKVxuICAgICAgJHNjb3BlLnBhcmVudHMgPSAkZmlyZWJhc2VPYmplY3QoRmlyZWJhc2VTZXJ2aWNlLnJvb3RSZWYuY2hpbGQoJ3BhcmVudHMnKSlcblxuICAgICAgJHNjb3BlLmFzc2lnbk1hbmFnZXIgPSAodXNlciwgaWQpIC0+XG4gICAgICAgIEZpcmViYXNlU2VydmljZS5yb290UmVmLmNoaWxkKFwidXNlcnMvI3tpZH0vYmFzaWMvbWFuYWdlclwiKS5zZXQgdHJ1ZVxuICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInVzZXJzLyN7aWR9L2Jhc2ljL21lbnRvclwiKS5zZXQgZmFsc2VcbiAgICAgICAgRmlyZWJhc2VTZXJ2aWNlLnJvb3RSZWYuY2hpbGQoXCJ1c2Vycy8je2lkfVwiKS5zZXRQcmlvcml0eSAnbWFuYWdlcidcblxuICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInJlZ2lzdHJhdGlvbnMvI3tpZH0vbWFuYWdlclwiKS5zZXQgdHJ1ZVxuICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInJlZ2lzdHJhdGlvbnMvI3tpZH0vbWVudG9yXCIpLnNldCBmYWxzZVxuICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInJlZ2lzdHJhdGlvbnMvI3tpZH1cIikuc2V0UHJpb3JpdHkgJ21hbmFnZXInXG5cbiAgICAgICRzY29wZS5hc3NpZ25NZW50b3IgPSAodXNlciwgaWQpIC0+XG4gICAgICAgIEZpcmViYXNlU2VydmljZS5yb290UmVmLmNoaWxkKFwidXNlcnMvI3tpZH0vYmFzaWMvbWFuYWdlclwiKS5zZXQgZmFsc2VcbiAgICAgICAgRmlyZWJhc2VTZXJ2aWNlLnJvb3RSZWYuY2hpbGQoXCJ1c2Vycy8je2lkfS9iYXNpYy9tZW50b3JcIikuc2V0IHRydWVcbiAgICAgICAgRmlyZWJhc2VTZXJ2aWNlLnJvb3RSZWYuY2hpbGQoXCJ1c2Vycy8je2lkfVwiKS5zZXRQcmlvcml0eSAnbWVudG9yJ1xuXG4gICAgICAgIEZpcmViYXNlU2VydmljZS5yb290UmVmLmNoaWxkKFwicmVnaXN0cmF0aW9ucy8je2lkfS9tYW5hZ2VyXCIpLnNldCBmYWxzZVxuICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInJlZ2lzdHJhdGlvbnMvI3tpZH0vbWVudG9yXCIpLnNldCB0cnVlXG4gICAgICAgIEZpcmViYXNlU2VydmljZS5yb290UmVmLmNoaWxkKFwicmVnaXN0cmF0aW9ucy8je2lkfVwiKS5zZXRQcmlvcml0eSAnbWVudG9yJ1xuXG4gICAgICAkc2NvcGUuc2VuZEVtYWlsID0gKHVzZXIsIGlkKSAtPlxuICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInF1ZXVlcy9zZW5kQ3JlZGVudGlhbHNFbWFpbFwiKS5wdXNoKCkuc2V0IHt1c2VySWQ6IGlkfVxuICAgICAgICBhbGVydCAnQWxsIFNldCEnXG5cblxuICAgICAgJHNjb3BlLmNyZWF0ZU5ld0NoaWxkID0gKG5ld0NoaWxkRm9ybSwgcGFyZW50SWQsIHRoZUNoaWxkLCBwYXJlbnQpIC0+XG4gICAgICAgIGlmIG5ld0NoaWxkRm9ybS4kdmFsaWRcbiAgICAgICAgICBzdHVkZW50UmVmID0gRmlyZWJhc2VTZXJ2aWNlLnJvb3RSZWYuY2hpbGQoJ3N0dWRlbnRzJykucHVzaCgpXG4gICAgICAgICAgc3R1ZGVudFJlZi5zZXQge2ZpcnN0TmFtZTogdGhlQ2hpbGQuZmlyc3ROYW1lLCBsYXN0TmFtZTogdGhlQ2hpbGQubGFzdE5hbWV9XG5cbiAgICAgICAgICBGaXJlYmFzZVNlcnZpY2Uucm9vdFJlZi5jaGlsZChcInBhcmVudHMvI3twYXJlbnRJZH1cIikuY2hpbGQoJ2NoaWxkcmVuJykucHVzaCgpLnNldCB7Zmlyc3ROYW1lOiB0aGVDaGlsZC5maXJzdE5hbWUsIGxhc3ROYW1lOiB0aGVDaGlsZC5sYXN0TmFtZSwgc3R1ZGVudElkOiBzdHVkZW50UmVmLmtleSgpfVxuICAgICAgICAgIHN0dWRlbnRSZWYuY2hpbGQoJ3BhcmVudCcpLnNldCB7Zmlyc3ROYW1lOiBwYXJlbnQuZmlyc3ROYW1lLCBsYXN0TmFtZTogcGFyZW50Lmxhc3ROYW1lLCBwYXJlbnRJZDogcGFyZW50SWR9XG5cblxuICBSZWdpc3RlckNvbnRyb2xsZXIuJGluamVjdCA9IFtcIiRzY29wZVwiLCBcIkZpcmViYXNlU2VydmljZVwiLCBcIiRmaXJlYmFzZU9iamVjdFwiLCBcIiRmaXJlYmFzZUFycmF5XCJdXG5cbiAgVGltZVNoZWV0QXBwLmNvbnRyb2xsZXIgJ1JlZ2lzdGVyQ29udHJvbGxlcicsIFJlZ2lzdGVyQ29udHJvbGxlclxuXG4gIFJlZ2lzdGVyQ29udHJvbGxlciJdfQ==
